version: '2.4'

networks:
  theater-auth-service:
    driver: bridge

services:
  api:
    build:
      dockerfile: src/Dockerfile
      context: .
    container_name: movies_auth
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - theater-auth-service

  db:
    image: postgres:16
    container_name: movies_db_auth
    restart: always
    volumes:
      - movies_auth_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "5435:5435"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB}" ]
      interval: 5s
      retries: 5
      timeout: 5s
    networks:
      - theater-auth-service

  redis:
    image: redis:7.4.1-alpine
    container_name: movies_redis_auth
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "6380:6379"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 50
    networks:
      - theater-auth-service

  test:
    build:
      dockerfile: src/Dockerfile.test
      context: .
    container_name: movies_auth_tests
    networks:
      - theater-auth-service
    env_file:
      - ./.env

volumes:
  movies_auth_data:
